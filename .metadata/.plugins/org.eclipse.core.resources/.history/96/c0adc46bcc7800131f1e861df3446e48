#include "WPILib.h"

#include "AlchemistDrive.h"
#include "AlchemistManipulator.h"
#include "AlchemistPIDOutput.h"
#include "AlchemistKicker.h"
#include "AlchemistOperatorInterface.h"
#include "AlchemistMacros.h"

class Alchemist: public IterativeRobot
{
	AlchemistDrive *drive;
	AlchemistManipulator *manipulator;
	AlchemistOperatorInterface *oi;
	Compressor *comp599;

public:	
	Alchemist()
	{
		manipulator = new AlchemistManipulator();
		drive = new AlchemistDrive();
		oi = new AlchemistOperatorInterface();
		comp599 = new Compressor(1, 1, 1, 1); //TODO: dummy numbers
		
		oi->dashboard->init();
		comp599->Start();
	}
	
	void RobotInit()
	{
	
	}
	
	void DisabledInit()
	{
	
	}
	
	void AutonomousInit()
	{
	
	}
	
	void TeleopInit()
	{
		drive->setLinVelocity(0);
		drive->setTurnSpeed(0, false);
		drive->drive();
	}
	
	void TestInit()
	{
	
	}
	
	void DisabledPeriodic()
	{
		smartDashboardPrint();
	}
	
	void AutonomousPeriodic()
	{
	
	
	}
	
	void TeleopPeriodic()
	{
		comp599->Start();
		
		while(IsOperatorControl())
		{
			 teleDrive();
			 smartDashboardPrint();
		}
	}
	
	void TestPeriodic()
	{
	
	}
	
	void teleDrive()
	{
		drive->setLinVelocity(-oi->getDriveJoystick()->GetY(Joystick::kRightHand));
		drive->setTurnSpeed(oi->getDriveJoystick()->GetX(Joystick::kRightHand), oi->getDriveJoystickButton(1));
		drive->drive();
		drive->shift(oi->getDriveJoystickButton(8), oi->getDriveJoystickButton(9));
		if(oi->getDriveJoystickButton(6))
		{
			comp599->Start();
		}
		else if(oi->getDriveJoystickButton(7))
		{
			comp599->Stop();
		}
	}
	
	void smartDashboardPrint()
	{
		//oi->dashboard->PutNumber();
	}
};	
